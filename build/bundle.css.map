{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "ChoiceButton.svelte",
    "Choices.svelte",
    "Currency.svelte",
    "Page.svelte",
    "ResetButton.svelte",
    "VoiceRecognition.svelte",
    "Evidence.svelte",
    "GhostType.svelte",
    "Objectives.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport Choices from \"./components/Choices.svelte\";\nimport CollectionButton from \"./components/CollectionButton.svelte\";\nimport Currency from \"./components/Currency.svelte\";\nimport YearCounter from \"./components/YearCounter.svelte\";\n</script>\n\n<style>\n  header {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n</style>\n\n<header>\n  <Currency/>\n  <CollectionButton/>\n</header>\n<main>\n  <Choices/>\n</main>\n<footer>\n  <YearCounter/>\n</footer>\n",
    "<script>\nimport { currentChoice } from \"../data/appData.js\";\nimport { currency } from \"../data/appData.js\";\nimport { currentYear } from \"../data/appData.js\";\nimport { currentDay } from \"../data/appData.js\";\n\nexport let choice;\n\nlet choiceEffect = $currentChoice.choices[choice];\n\nfunction makeChoice() {\n  // currency aanpassen\n  for (const effect of choiceEffect) {\n    $currency[effect[0]] += effect[1]\n  }\n  // volgende dag\n  nextDay()\n}\n\nfunction nextDay() {\n  currentDay.update(value => value += 1)\n}\n</script>\n\n<style media=\"screen\">\n  .choiceButton {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0.5rem;\n  }\n\n  .choiceButton button {\n    width: 10rem;\n    height: 2rem;\n  }\n</style>\n\n<div class=\"choiceButton\">\n  <p>{choiceEffect}</p>\n  <button type=\"button\" name=\"button\" on:click={makeChoice}>{choice}</button>\n</div>\n",
    "<script>\nimport ChoiceButton from \"./ChoiceButton.svelte\";\nimport { choices } from \"../data/choices.js\";\nimport { currentChoice } from \"../data/appData.js\";\nimport { currentDay } from \"../data/appData.js\";\n\ncurrentDay.subscribe(value => {\n  randomChoice()\n})\n\nfunction randomChoice() {\n  const randomIndex = Math.floor(Math.random() * choices.length)\n  currentChoice.set(choices[randomIndex])\n}\n</script>\n\n<style>\n  .choices {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n  }\n</style>\n\n<h2>{$currentChoice.title}</h2>\n<p>{$currentChoice.description}</p>\n<div class=\"choices\">\n  {#each Object.keys($currentChoice.choices) as choice}\n    <ChoiceButton {choice}/>\n  {/each}\n</div>\n",
    "<script>\nimport { currency } from \"../data/appData.js\";\n</script>\n\n<style media=\"screen\">\n  p {\n    margin: 0;\n  }\n</style>\n\n<div class=\"currency\">\n  {#each Object.keys($currency) as currencyItem}\n  <p>{currencyItem} {$currency[currencyItem]}</p>\n  {/each}\n</div>\n",
    "<script>\n\n</script>\n\n<style>\n.page {\n  padding: 2rem;\n\t-webkit-box-shadow: 0.2rem 0.2rem 1rem 0.2rem var(--color-book-dark);\n\tbox-shadow: 0.2rem 0.2rem 1rem 0.2rem var(--color-book-dark);\n  display: flex;\n  flex-direction: column;\n}\n\n@media only screen and (max-width: 70rem) {\n  .page {\n    -webkit-box-shadow: 0 0 0 0;\n\t  box-shadow: 0 0 0 0;\n  }\n}\n\n.divider {\n  border-top: 1px solid var(--color-text);\n  border-bottom: 0px;\n  opacity: 0.1;\n  margin: 1.5rem 0;\n}\n\n:global(*[slot=\"components\"]) {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n:global(*[slot=\"components\"] > *) {\n  padding-bottom: 2rem;\n}\n</style>\n\n<section class=\"page\">\n  <header>\n    <slot name=\"title\"/>\n    <hr class=\"divider\"/>\n  </header>\n  <slot/>\n  <slot name=\"components\"/>\n</section>\n",
    "<script>\nimport { evidenceList } from \"../data/gameData.js\";\nimport { resetData } from \"../data/currentData.js\";\n\nexport let floating = true;\n</script>\n\n<style>\nbutton {\n  color: var(--color-book-light);\n  background-color: var(--color-checked);\n  border: 0;\n  cursor: pointer;\n  z-index: 100;\n  position: relative;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  margin-top: 0.5rem;\n}\n\nbutton.floating {\n  position: fixed;\n  top: 1.5rem;\n  right: 2rem;\n  width: 5rem;\n  height: 5rem;\n  padding: 0;\n  border-radius: 50%;\n}\n\nbutton:hover {\n  background-color: var(--color-checked-dark);\n  transform: scale(1.05);\n}\n</style>\n\n{#if floating}\n<button class=\"floating\" type=\"button\" on:click={() => resetData()}>Reset Book</button>\n{:else}\n<button type=\"button\" on:click={() => resetData()}>Reset Book</button>\n{/if}\n",
    "<script>\nimport { onMount } from \"svelte\";\nimport VoiceCommands from \"./VoiceCommands.svelte\";\nimport { synonyms } from \"../data/voiceData.js\";\nimport { transcript } from \"../data/currentData.js\";\n\nlet transcriptValue;\ntranscript.subscribe(value => {\n\ttranscriptValue = value;\n  console.log(transcriptValue);\n});\n$: transcript.set(transcriptValue);\n\nlet visible = true;\nlet support = true;\nlet recordingText = \"Press the button to Start listening.\";\nlet recognizing = false;\n\n// https://dev.to/karkranikhil/voice-controlled-notes-taking-application-using-svelte-1kek\ntry {\n  let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  var recognition = new SpeechRecognition();\n  recognition.continuous = false;\n  recognition.interimResults = false;\n  recognition.lang = \"EN-US\";\n} catch (e) {\n  support = false;\n  // console.error(e);\n}\n\nonMount(async () => {\n  const voiceButton = document.getElementById(\"voice-button\")\n  if (voiceButton) voiceButton.onclick = () => {\n    if (recognizing) {\n      recognition.stop()\n      recognizing = false;\n      recordingText = \"Voice recognition turned off.\";\n    } else {\n      recognition.start()\n    }\n  };\n})\n\nif (recognition) {\n  // onresult called every time the Speech API captures Voice.\n  recognition.onresult = (event) => {\n    let current = event.resultIndex;\n\n    // Get a transcript of what was said.\n    transcriptValue = event.results[current][0].transcript.toLowerCase();\n\n  \t// replace synonyms in transcript\n    for (const synonym of Object.keys(synonyms)) {\n      transcriptValue = transcriptValue.replace(synonym, synonyms[synonym])\n    }\n\n    recordingText = transcriptValue;\n  };\n\n  // Trigger on start\n  recognition.onstart = () => {\n    recognizing = true;\n    // setting the text to inform user about the action\n    recordingText = \"The spirit box is listening...\";\n  };\n\n  // Trigger on end\n  recognition.onspeechend = () => {\n    recognizing = false;\n    // setting the text to inform user about the action\n    setTimeout(() => recognition.start(), 1000);\n  };\n\n  // Trigger on error\n  recognition.onerror = (event) => {\n    recognizing = false;\n    if (event.error == \"no-speech\") {\n    // setting the text to inform user about the action\n      recordingText = \"No Voice was detected. Trying again...\";\n    }\n    setTimeout(() => recognition.start(), 1000);\n  };\n}\n</script>\n\n<style>\nheader {\n  position: fixed;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  min-height: 4rem;\n  width: 40rem;\n  max-width: 100%;\n  bottom: 1rem;\n  z-index: 100;\n}\n\n@media only screen and (max-width: 45rem) {\n  header {\n    flex-direction: column-reverse;\n    width: 100%;\n  }\n}\n\nheader p {\n  margin-bottom: 0;\n  text-transform: capitalize;\n}\n\nbutton.close {\n  border-radius: 50%;\n  width: 3rem;\n  height: 2.7rem;\n  cursor: pointer;\n  background-color: var(--color-text);\n  color: var(--color-book-light);\n  border: 0;\n  outline: 0;\n  transform: translate(-52%, 0);\n}\n\n@media only screen and (max-width: 45rem) {\n  button.close {\n    height: 3rem;\n    transform: translate(0, 50%);\n  }\n}\n\nbutton.close:hover, button.close:focus {\n  background-color: var(--color-book-dark);\n}\n\n.recorder {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: var(--color-text);\n  padding: 1rem;\n}\n\n.recorder > * {\n  color: var(--color-book-light);\n}\n\n.recorder button {\n  min-height: 2rem;\n  min-width: 2rem;\n  margin-right: 1rem;\n  cursor: pointer;\n}\n</style>\n\n<VoiceCommands/>\n<header>\n  {#if visible}\n    <div class=\"recorder\">\n      {#if support}\n        <button type=\"button\" id=\"voice-button\"></button>\n        <p>{recordingText}</p>\n      {:else}\n        <p>Please open this page in the newest version Chrome or Edge to use voice recognition.</p>\n      {/if}\n    </div>\n    <button class=\"close\" type=\"button\" on:click={() => visible = !visible}>âœ•</button>\n  {/if}\n</header>\n",
    "<script>\nimport { evidenceList } from \"../../data/gameData.js\";\nimport { gatheredEvidence } from \"../../data/currentData.js\";\n\nlet selection = {confirmed: [], ruledOut: []};\nlet gatheredEvidenceValue;\ngatheredEvidence.subscribe(value => {\n\tgatheredEvidenceValue = value;\n  updateSelection();\n});\n\nfunction updateData(e, evidence, value) {\n  // Remove evidence from other selection\n  let otherValue = \"confirmed\";\n  if (value == \"confirmed\") otherValue = \"ruledOut\";\n  selection[otherValue] = selection[otherValue].filter(item => item !== evidence);\n\n  // Convert selection to gatheredEvidence\n  let valueBool = undefined;\n  if (selection.confirmed.includes(evidence)) valueBool = true;\n  else if (selection.ruledOut.includes(evidence)) valueBool = false;\n\n  gatheredEvidence.update(value => {\n    value[evidence] = valueBool;\n    return value;\n  });\n}\n\n// Convert gatheredevidence to selection\nfunction updateSelection() {\n  selection = {confirmed: [], ruledOut: []};\n  Object.keys(gatheredEvidenceValue).forEach((item, i) => {\n    if (gatheredEvidenceValue[item] !== undefined) {\n      if (gatheredEvidenceValue[item] === true) {\n        selection.confirmed.push(item)\n      }\n      else if (gatheredEvidenceValue[item] === false) {\n        selection.ruledOut.push(item)\n      }\n    }\n  });\n}\n</script>\n\n<style>\n.table {\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 1fr 3fr;\n}\n\n.table h2 {\n  text-align: center;\n}\n\n.table label {\n  margin: 0 auto;\n  margin-bottom: 1.6rem;\n}\n\n.table > div {\n  margin-left: 1rem;\n  display: flex;\n  align-items: center;\n}\n\n.table img {\n  margin-right: 1rem;\n  width: 2rem;\n  height: 2rem;\n}\n</style>\n\n<article>\n  <slot/>\n  <div class=\"table\">\n    <h2 style=\"colspan: 2\">Confirmed</h2>\n    <h2>Ruled Out</h2>\n    <h2>Type of Evidence</h2>\n    {#each evidenceList as evidence}\n      <label class=\"control control-checkbox\">\n        <input type=\"checkbox\" value={evidence.value} bind:group={selection.confirmed} on:change={(e) => updateData(e, evidence.value, \"confirmed\")}/>\n        <div class=\"control_indicator\"></div>\n      </label>\n      <label class=\"control control-checkbox\">\n        <input type=\"checkbox\" value={evidence.value} bind:group={selection.ruledOut} on:change={(e) => updateData(e, evidence.value, \"ruledOut\")}/>\n        <div class=\"control_indicator\"></div>\n      </label>\n      <div>\n        <img src={`resources/icons/${evidence.value}.svg`} alt={evidence.title}>\n        {evidence.title}\n      </div>\n    {/each}\n  </div>\n</article>\n",
    "<script>\nimport { fade } from \"svelte/transition\";\nimport ResetButton from \"../ResetButton.svelte\";\nimport { ghostList } from \"../../data/gameData.js\";\nimport { gatheredEvidence } from \"../../data/currentData.js\";\n\nconst evidenceAmount = 3;\n\nlet ghosts = ghostList;\nlet gatheredEvidenceValue;\ngatheredEvidence.subscribe((value) => {\n  gatheredEvidenceValue = value;\n  filterGhosts()\n});\n\nfunction filterGhosts() {\n  ghosts = ghostList;\n  Object.keys(gatheredEvidenceValue).forEach((evidence, i) => {\n    // True is evidence confirmed, false is evidence ruled out\n    if (gatheredEvidenceValue[evidence] === true) {\n      ghosts = ghosts.filter(ghost => ghost.evidence.includes(evidence))\n    }\n    else if (gatheredEvidenceValue[evidence] === false) {\n      ghosts = ghosts.filter(ghost => !ghost.evidence.includes(evidence))\n    }\n  });\n}\n</script>\n\n<style>\n.ghost-list {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n@media only screen and (max-width: 30rem) {\n  .ghost-list {\n    grid-template-columns: 1fr;\n  }\n}\n\n.ghost {\n  margin-bottom: 0.6rem;\n  display: flex;\n  align-items: center;\n}\n\n.ghost > * {\n  margin-right: 0.4rem;\n}\n\n.ghost span {\n  margin-right: 0;\n  margin-left: 0.8rem;\n}\n\n.ghost .evidence-gathered {\n  opacity: 0.25;\n}\n\n.ghost img {\n  width: 2rem;\n  height: 2rem;\n}\n\np {\n  margin-top: 0.5rem;\n}\n</style>\n\n<article>\n  <slot/>\n  <div class=\"ghost-list\">\n  {#each ghosts as ghost}\n    <div class=\"ghost\" transition:fade=\"{{duration: 300}}\">\n      {#each ghost.evidence as evidence}\n        {#if gatheredEvidenceValue[evidence] !== true}\n          <img src={`resources/icons/${evidence}.svg`} alt={evidence}>\n        {/if}\n      {/each}\n      {#each ghost.evidence as evidence}\n        {#if gatheredEvidenceValue[evidence] === true}\n          {#if ghosts.length > 1}\n            <img class=\"evidence-gathered\" src={`resources/icons/${evidence}.svg`} alt={evidence}>\n          {:else}\n            <img src={`resources/icons/${evidence}.svg`} alt={evidence}>\n          {/if}\n        {/if}\n      {/each}\n      <span>{ghost.name}</span>\n    </div>\n  {/each}\n  </div>\n  {#if ghosts.length === 0}\n    <p in:fade=\"{{duration: 300, delay: 100}}\">\n      No ghost has been identified by your combination of evidence.\n    </p>\n  {/if}\n  {#if ghosts.length === 1}\n    <p in:fade=\"{{duration: 300, delay: 100}}\">\n      Don't forget to select the right ghost in your journal :)\n    </p>\n    <ResetButton floating={false}/>\n  {/if}\n</article>\n",
    "<script>\nimport { afterUpdate } from \"svelte\";\nimport { fade } from \"svelte/transition\";\nimport { objectiveList } from \"../../data/gameData.js\";\nimport { objectives } from \"../../data/currentData.js\";\n\nlet objectivesValue;\nobjectives.subscribe(value => {\n\tobjectivesValue = value;\n});\n$: objectives.set(objectivesValue);\n\n// Split up text into list of two (before and after trigger word)\nobjectiveList.map(d => d.text = d.text.split(d.trigger))\n\n</script>\n\n<style>\nspan {\n  color: var(--color-checked);\n  font-weight: bold;\n}\n</style>\n\n<article>\n  <slot/>\n    {#each objectiveList as objective}\n      {#if objectivesValue.length < 3 || objectivesValue.includes(objective.value)}\n        <label class=\"control control-checkbox\" transition:fade>\n          {objective.text[0]} <span>{objective.trigger}</span> {objective.text[1]}\n          <input type=\"checkbox\" name=\"check\" value={objective.value} bind:group={objectivesValue}/>\n          <div class=\"control_indicator\"></div>\n        </label>\n      {/if}\n    {/each}\n</article>\n"
  ],
  "names": [],
  "mappings": "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"
}